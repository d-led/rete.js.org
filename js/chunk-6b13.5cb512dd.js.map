{"version":3,"sources":["webpack:///./src/components/Docs/assets/processStartNode.png","webpack:///./src/components/Docs/Engine/index.vue?2870","webpack:///src/components/Docs/Engine/index.vue","webpack:///./src/components/Docs/Engine/index.vue?9ad5","webpack:///./src/components/Docs/Engine/index.vue?738b","webpack:///./src/components/Docs/Engine/index.vue?8e09","webpack:///./src/components/Docs/Engine/index.vue?eab9","webpack:///./src/components/Docs/Engine/index.vue?41c4","webpack:///./src/components/Docs/Engine/index.vue?66ca","webpack:///./src/components/Docs/Engine/index.vue?086c","webpack:///./src/components/Docs/Engine/index.vue","webpack:///./src/components/Docs/assets/process.gif"],"names":["module","exports","__webpack_require__","p","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","source","src","processImg","startNodeImg","_m","staticRenderFns","href","Enginevue_type_script_lang_js_","data","process_default","a","processStartNode_default","Docs_Enginevue_type_script_lang_js_","Enginevue_type_custom_index_0_blockType_code_name_engineNode","Component","options","code","Docs_Enginevue_type_custom_index_0_blockType_code_name_engineNode","Enginevue_type_custom_index_1_blockType_code_name_engineProcess","Docs_Enginevue_type_custom_index_1_blockType_code_name_engineProcess","Enginevue_type_custom_index_2_blockType_code_name_worker","Docs_Enginevue_type_custom_index_2_blockType_code_name_worker","component","Object","componentNormalizer","__file","__webpack_exports__"],"mappings":"+FAAAA,EAAAC,QAAAC,EAAAC,EAAA,gFCAA,IAAAC,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,WAAqBF,EAAA,MAAAJ,EAAAO,GAAA,YAAAH,EAAA,KAAAJ,EAAAO,GAAA,oPAAAH,EAAA,QAA4SI,OAAOC,OAAA,gBAAuBL,EAAA,KAAAJ,EAAAO,GAAA,+CAAAH,EAAA,MAAAJ,EAAAO,GAAA,eAAAH,EAAA,KAAAJ,EAAAO,GAAA,gDAAAH,EAAA,OAAwKI,OAAOE,IAAAV,EAAAW,cAAsBP,EAAA,KAAAJ,EAAAO,GAAA,+IAAAH,EAAA,QAA2KI,OAAOC,OAAA,mBAA0BL,EAAA,KAAAJ,EAAAO,GAAA,+aAAAH,EAAA,KAAAJ,EAAAO,GAAA,yIAAAH,EAAA,QAAAJ,EAAAO,GAAA,oCAAyoBH,EAAA,KAAAJ,EAAAO,GAAA,kWAAAH,EAAA,OAAgYI,OAAOE,IAAAV,EAAAY,gBAAwBR,EAAA,KAAAJ,EAAAO,GAAA,yEAAAH,EAAA,QAAAJ,EAAAO,GAAA,6CAAoJH,EAAA,KAAAJ,EAAAO,GAAA,6EAAAH,EAAA,QAA4GI,OAAOC,OAAA,YAAmBL,EAAA,KAAAJ,EAAAO,GAAA,sJAAAH,EAAA,QAAAJ,EAAAO,GAAA,qDAAyOH,EAAA,MAAAJ,EAAAO,GAAA,+BAAAH,EAAA,KAAAJ,EAAAO,GAAA,qHAAAP,EAAAa,GAAA,QACr4EC,GAAA,WAAoC,IAAAd,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,MAAAA,EAAA,MAAAA,EAAA,KAAiCI,OAAOO,KAAA,0CAA+Cf,EAAAO,GAAA,iEC4D1LS,GACAC,KADA,WAEA,OACAN,WAAAO,EAAAC,EACAP,aAAAQ,EAAAD,KCjEiSE,EAAA,cCAjSC,EAAA,SAAAC,GACAA,EAAAC,QAAAC,OAAAF,EAAAC,QAAAC,SACAF,EAAAC,QAAAC,KAAA,2HCFoPC,EAAA,ECApPC,EAAA,SAAAJ,GACAA,EAAAC,QAAAC,OAAAF,EAAAC,QAAAC,SACAF,EAAAC,QAAAC,KAAA,mICFuPG,EAAA,ECAvPC,EAAA,SAAAN,GACAA,EAAAC,QAAAC,OAAAF,EAAAC,QAAAC,SACAF,EAAAC,QAAAC,KAAA,+FCFgPK,EAAA,ECOhPC,EAAAC,OAAAC,EAAA,KAAAD,CACAX,EACAtB,EACAe,GACA,EACA,KACA,KACA,MAMA,oBAAAY,KAAAK,GAEA,oBAAAH,KAAAG,GAEA,oBAAAD,KAAAC,GAEAA,EAAAP,QAAAU,OAAA,YACAC,EAAA,WAAAJ,gCC3BApC,EAAAC,QAAAC,EAAAC,EAAA","file":"js/chunk-6b13.5cb512dd.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/processStartNode.0ec4463c.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"engine\"},[_c('h1',[_vm._v(\"Движок\")]),_c('p',[_vm._v(\"Этот класс позволяет обрабатывать данные на основе потоков в узлах и передавать их из выходных данных во входные. Движок не зависит от других компонентов редактора. Все, что ему нужно - это идентификатор, воркеры Компонентов и JSON данные\")]),_c('Code',{attrs:{\"source\":\"engineNode\"}}),_c('p',[_vm._v(\"Он может работать независимо от Редактора\")]),_c('h2',[_vm._v(\"Обработка\")]),_c('p',[_vm._v(\"Обход узлов выполняется следующим образом:\")]),_c('img',{attrs:{\"src\":_vm.processImg}}),_c('p',[_vm._v(\"Рассмотрим ситуацию, когда во время работы в редакторе нужно сразу получать результаты изменений (это легко сделать с событием 'process')\")]),_c('Code',{attrs:{\"source\":\"engineProcess\"}}),_c('p',[_vm._v(\" В общем случае при каждом изиенении в схеме (узлы, соединения, данные узла) необходимо выполнять обработку. \\nВ связи с тем, что воркеры могут быть асинхронными, метод 'process' также является асинхронным.\\nТак как действия, провоцирующие обработку, могут выполняться не дожидаясь завершения предыдущей обработки, нам необходим метод `abort`, который ожидает завершения предыдущей обработки и гарантирует целостность данных.\")]),_c('p',[_vm._v(\"Обычно есть какой-то основной узел, с которого должна начинаться обработка или все данные идут к нему, тогда вы можете указать его:\")]),_c('Code',[_vm._v(\"engine.process(data, node.id);\")]),_c('p',[_vm._v(\" Это может быть важно в ситуациях, когда узел запрашивает данные одновременно из нескольких узлов.\\nНапример, если стартовым узлом будет Output material, тогда верхняя и нижняя цепочка узлов будут обработаны параллельно.\\nЕсли начать обработку с узла Lightness, тогда обработка нижних узлов будет начата только после получения результата в текущем.\")]),_c('img',{attrs:{\"src\":_vm.startNodeImg}}),_c('p',[_vm._v(\"Также вы можете передавать дополнительные аргументы внутрь воркеров\")]),_c('Code',[_vm._v(\"engine.process(data, null, arg1, arg2);\")]),_c('p',[_vm._v(\"Каждому воркеру, обработанному этим процессом, будут переданы аргументы\")]),_c('Code',{attrs:{\"source\":\"worker\"}}),_c('p',[_vm._v(\"Если во время обработки возникает ошибка (обнаружена рекурсия, неправильный startId, неверные данные), вы можете получить его сообщение и данные\")]),_c('Code',[_vm._v(\"engine.on('error', ({ message, data }) => { });\")]),_c('h2',[_vm._v(\"Кроссплатформенный Движок\")]),_c('p',[_vm._v(\"Внимание! Текущая версия движка на С++ не совместима с версией 1.0.0, но может быть обновлена при необходимости\")]),_vm._m(0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/retejs/cpp-engine\"}},[_vm._v(\"Cpp Engine \")])])])}]\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n.engine\n  h1 Движок\n  p Этот класс позволяет обрабатывать данные на основе потоков в узлах и передавать их из выходных данных во входные. Движок не зависит от других компонентов редактора. Все, что ему нужно - это идентификатор, воркеры Компонентов и JSON данные\n  Code(source=\"engineNode\")\n  p Он может работать независимо от Редактора\n\n  h2 Обработка\n  p Обход узлов выполняется следующим образом:\n  img(:src=\"processImg\")\n  p Рассмотрим ситуацию, когда во время работы в редакторе нужно сразу получать результаты изменений (это легко сделать с событием 'process')\n  Code(source=\"engineProcess\")\n  p \n    | В общем случае при каждом изиенении в схеме (узлы, соединения, данные узла) необходимо выполнять обработку. \n    | В связи с тем, что воркеры могут быть асинхронными, метод 'process' также является асинхронным.\n    | Так как действия, провоцирующие обработку, могут выполняться не дожидаясь завершения предыдущей обработки, нам необходим метод `abort`, который ожидает завершения предыдущей обработки и гарантирует целостность данных.\n  p Обычно есть какой-то основной узел, с которого должна начинаться обработка или все данные идут к нему, тогда вы можете указать его:\n  Code engine.process(data, node.id);\n  p \n    | Это может быть важно в ситуациях, когда узел запрашивает данные одновременно из нескольких узлов.\n    | Например, если стартовым узлом будет Output material, тогда верхняя и нижняя цепочка узлов будут обработаны параллельно.\n    | Если начать обработку с узла Lightness, тогда обработка нижних узлов будет начата только после получения результата в текущем.\n  img(:src=\"startNodeImg\")\n  p Также вы можете передавать дополнительные аргументы внутрь воркеров\n  Code engine.process(data, null, arg1, arg2);\n  p Каждому воркеру, обработанному этим процессом, будут переданы аргументы\n  Code(source=\"worker\")\n  p Если во время обработки возникает ошибка (обнаружена рекурсия, неправильный startId, неверные данные), вы можете получить его сообщение и данные\n  Code engine.on('error', ({ message, data }) => { });\n\n  h2 Кроссплатформенный Движок\n  p Внимание! Текущая версия движка на С++ не совместима с версией 1.0.0, но может быть обновлена при необходимости\n  ul\n    li\n      a(href=\"https://github.com/retejs/cpp-engine\") Cpp Engine \n</template>\n\n<code name=\"engineNode\">\nvar engine = new Rete.Engine('demo@0.1.0');\n\nengine.register(myComponent);\nawait engine.process(data);\n</code>\n\n<code name=\"engineProcess\">\neditor.on('process', async () => {\n    await engine.abort();\n    await engine.process(editor.toJSON());\n});\n</code>\n\n<code name=\"worker\">\nworker(node, inputs, outputs, arg1, arg2) {\n  outputs['num'] = node.data.num;\n}\n</code>\n\n<script>\nimport processImg from '../assets/process.gif';\nimport startNodeImg from '../assets/processStartNode.png';\n\nexport default {\n  data() {\n    return {\n      processImg,\n      startNodeImg\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export default function (Component) {\n      if(!Component.options.code) Component.options.code = {};\n      Component.options.code['engineNode'] = \"var engine = new Rete.Engine('demo@0.1.0');\\n\\nengine.register(myComponent);\\nawait engine.process(data);\";\n    }","import mod from \"-!../../../../loaders/code.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=custom&index=0&blockType=code&name=engineNode\"; export default mod; export * from \"-!../../../../loaders/code.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=custom&index=0&blockType=code&name=engineNode\"","export default function (Component) {\n      if(!Component.options.code) Component.options.code = {};\n      Component.options.code['engineProcess'] = \"editor.on('process', async () => {\\n    await engine.abort();\\n    await engine.process(editor.toJSON());\\n});\";\n    }","import mod from \"-!../../../../loaders/code.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=custom&index=1&blockType=code&name=engineProcess\"; export default mod; export * from \"-!../../../../loaders/code.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=custom&index=1&blockType=code&name=engineProcess\"","export default function (Component) {\n      if(!Component.options.code) Component.options.code = {};\n      Component.options.code['worker'] = \"worker(node, inputs, outputs, arg1, arg2) {\\n  outputs['num'] = node.data.num;\\n}\";\n    }","import mod from \"-!../../../../loaders/code.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=custom&index=2&blockType=code&name=worker\"; export default mod; export * from \"-!../../../../loaders/code.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=custom&index=2&blockType=code&name=worker\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=67952810&lang=pug&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./index.vue?vue&type=custom&index=0&blockType=code&name=engineNode\"\nif (typeof block0 === 'function') block0(component)\nimport block1 from \"./index.vue?vue&type=custom&index=1&blockType=code&name=engineProcess\"\nif (typeof block1 === 'function') block1(component)\nimport block2 from \"./index.vue?vue&type=custom&index=2&blockType=code&name=worker\"\nif (typeof block2 === 'function') block2(component)\n\ncomponent.options.__file = \"index.vue\"\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/process.750edb1a.gif\";"],"sourceRoot":""}