(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["ab4d"],{ab4d:function(o,e,n){"use strict";n.r(e);var t=function(){var o=this,e=o.$createElement,n=o._self._c||e;return n("div",{staticClass:"plugin"},[n("Code",{attrs:{source:"install"}}),n("p",[o._v("Плагин создает 'readonly' и 'isreadonly' события")]),n("p",[o._v("Проверить, что событие существует, то есть плагин установлен")]),n("Code",{attrs:{source:"exist"}}),n("p",[o._v("Проверка и изменение состояния")]),n("Code",{attrs:{source:"check"}}),n("p",[o._v("Добавление побочных эффектов при включении/выключении режима только для чтения")]),n("Code",{attrs:{source:"side"}})],1)},i=[],s=n("2877"),d=function(o){o.options.code||(o.options.code={}),o.options.code["install"]="import ReadonlyPlugin from 'rete-readonly-plugin';\n\neditor.use(ReadonlyPlugin, { enabled: false }); // enabled is true by default"},l=d,r=function(o){o.options.code||(o.options.code={}),o.options.code["exist"]="this.emitter.exist('isreadonly');"},c=r,a=function(o){o.options.code||(o.options.code={}),o.options.code["check"]="let readonlyEnabled = editor.trigger('isreadonly');\n\neditor.trigger('readonly', readonlyEnabled);"},p=a,u=function(o){o.options.code||(o.options.code={}),o.options.code["side"]="editor.on('readonly', () => {})"},f=u,y={},b=Object(s["a"])(y,t,i,!1,null,null,null);"function"===typeof l&&l(b),"function"===typeof c&&c(b),"function"===typeof p&&p(b),"function"===typeof f&&f(b),b.options.__file="Readonly.vue";e["default"]=b.exports}}]);
//# sourceMappingURL=ab4d.648f2ca5.js.map