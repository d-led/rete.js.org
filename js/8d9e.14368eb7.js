(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["8d9e"],{"8d9e":function(n,t,e){"use strict";e.r(t);var o=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"plugin"},[e("Code",{attrs:{source:"install"}}),e("table",[e("thead",[e("tr",n._l(n.head,function(t){return e("th",[n._v(n._s(t))])}))]),e("tbody",n._l(n.items,function(t){return e("tr",n._l(t,function(t){return e("td",[n._v(n._s(t))])}))}))])],1)},r=[],i={data:function(){return{head:["Свойство","Описание"],items:[["type","Type of built-in transformer"],["transformer","Custom transformer"],["curve","any curve from d3-shape"],["options","{ vertical: Boolean, curvature: Number }"],["arrow","Boolean or { color, marker: /* path d attribute */ }"]]}}},a=i,u=e("2877"),c=function(n){n.options.code||(n.options.code={}),n.options.code["install"]="import ConnectionPathPlugin from 'rete-connection-path-plugin';\n\neditor.use(ConnectionPathPlugin, {\n    type: ConnectionPathPlugin.DEFAULT, // DEFAULT or LINEAR transformer\n    transformer: () => ([x1, y1, x2, y2]) => [[x1, y1], [x2, y2]], // optional, custom transformer\n    curve: ConnectionPathPlugin.curveBundle, // curve identifier\n    options: { vertical: false, curvature: 0.4 }, // optional\n    arrow: { color: 'steelblue', marker: 'M-5,-10 L-5,10 L20,0 z' }\n});"},l=c,s=Object(u["a"])(a,o,r,!1,null,null,null);"function"===typeof l&&l(s),s.options.__file="ConnectionPath.vue";t["default"]=s.exports}}]);
//# sourceMappingURL=8d9e.14368eb7.js.map